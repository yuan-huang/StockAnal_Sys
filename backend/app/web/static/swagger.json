{
  "swagger": "2.0",
  "info": {
    "title": "股票FinCore AI API",
    "description": "FinCore AI Stock Analysis System REST API",
    "version": "2.1.0"
  },
  "host": "localhost:8888",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "APIKeyHeader": {
      "type": "apiKey",
      "name": "X-API-KEY",
      "in": "header"
    },
    "HMACSignature": {
      "type": "apiKey",
      "name": "X-HMAC-SIGNATURE",
      "in": "header"
    }
  },
  "paths": {
    "/analyze": {
      "post": {
        "summary": "Analyze a single stock",
        "description": "Performs a comprehensive analysis of a single stock, including technical indicators, fundamental data, and AI-driven insights. This is a synchronous operation.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "APIKeyHeader": [],
            "HMACSignature": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalysisRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful analysis",
            "schema": {
              "$ref": "#/definitions/AnalysisResult"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/start_stock_analysis": {
      "post": {
        "summary": "Start a stock analysis task",
        "description": "Starts an asynchronous stock analysis task. The client should poll the status endpoint to get the result.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "APIKeyHeader": [],
            "HMACSignature": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalysisRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Task accepted",
            "schema": {
              "$ref": "#/definitions/TaskCreationResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
"/api/analysis_status/{task_id}": {
      "get": {
        "summary": "Get analysis task status",
        "description": "Retrieves the status and result of an asynchronous analysis task.",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "APIKeyHeader": [],
            "HMACSignature": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Task status",
            "schema": {
              "$ref": "#/definitions/TaskStatusResponse"
            }
          },
          "404": {
            "description": "Task not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/stock_data": {
      "get": {
        "summary": "Get historical stock data",
        "description": "Retrieves historical price data and technical indicators for a given stock.",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "APIKeyHeader": [],
            "HMACSignature": []
          }
        ],
        "parameters": [
          {
            "name": "stock_code",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The stock code, e.g., '600519'"
          },
          {
            "name": "market_type",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "A",
            "description": "Market type: 'A', 'HK', or 'US'"
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "1m",
              "3m",
              "6m",
              "1y"
            ],
            "default": "1y",
            "description": "Time period for the data"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of stock data"
          },
          "400": {
            "description": "Invalid parameters",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/start_market_scan": {
      "post": {
        "summary": "Start a market scan task",
        "description": "Starts an asynchronous market scan task to find stocks matching the given criteria.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "APIKeyHeader": [],
            "HMACSignature": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "stock_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "600519",
                    "000858"
                  ]
                },
                "min_score": {
                  "type": "integer",
                  "example": 60
                },
                "market_type": {
                  "type": "string",
                  "example": "A"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Task accepted",
            "schema": {
              "$ref": "#/definitions/TaskCreationResponse"
            }
          }
        }
      }
    },
    "/api/scan_status/{task_id}": {
      "get": {
        "summary": "Get scan task status",
        "description": "Retrieves the status and result of an asynchronous market scan task.",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "APIKeyHeader": [],
            "HMACSignature": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Task status",
            "schema": {
              "$ref": "#/definitions/TaskStatusResponse"
            }
          },
          "404": {
            "description": "Task not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/tasks": {
      "get": {
        "summary": "List all tasks",
        "description": "Retrieves a list of all current and recently completed tasks.",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "APIKeyHeader": [],
            "HMACSignature": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of tasks",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        }
      }
    },
    "/api/tasks/{task_id}": {
      "delete": {
        "summary": "Delete a task",
        "description": "Deletes a completed or failed task from the task manager.",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "APIKeyHeader": [],
            "HMACSignature": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully"
          },
          "404": {
            "description": "Task not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/index_stocks": {
      "get": {
        "summary": "获取指数成分股",
        "description": "获取指定指数的成分股列表",
        "parameters": [
          {
            "name": "index_code",
            "in": "query",
            "required": true,
            "type": "string",
            "example": "000300"
          }
        ],
        "responses": {
          "200": {
            "description": "成功获取指数成分股"
          },
          "400": {
            "description": "请求参数错误"
          },
          "500": {
            "description": "服务器内部错误"
          }
        }
      }
    },
    "/api/industry_stocks": {
      "get": {
        "summary": "获取行业成分股",
        "description": "获取指定行业的成分股列表",
        "parameters": [
          {
            "name": "industry",
            "in": "query",
            "required": true,
            "type": "string",
            "example": "银行"
          }
        ],
        "responses": {
          "200": {
            "description": "成功获取行业成分股"
          },
          "400": {
            "description": "请求参数错误"
          },
          "500": {
            "description": "服务器内部错误"
          }
        }
      }
    },
    "/api/fundamental_analysis": {
      "post": {
        "summary": "基本面分析",
        "description": "获取股票的基本面分析结果",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "stock_code": {
                  "type": "string",
                  "example": "600519"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功获取基本面分析结果"
          }
        }
      }
    },
    "/api/capital_flow": {
      "post": {
        "summary": "资金流向分析",
        "description": "获取股票的资金流向分析结果",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "stock_code": {
                  "type": "string",
                  "example": "600519"
                },
                "days": {
                  "type": "integer",
                  "example": 10
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功获取资金流向分析结果"
          }
        }
      }
    },
    "/api/scenario_predict": {
      "post": {
        "summary": "情景预测",
        "description": "获取股票的多情景预测结果",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "stock_code": {
                  "type": "string",
                  "example": "600519"
                },
                "market_type": {
                  "type": "string",
                  "example": "A"
                },
                "days": {
                  "type": "integer",
                  "example": 60
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功获取情景预测结果"
          }
        }
      }
    },
    "/api/qa": {
      "post": {
        "summary": "智能问答",
        "description": "获取股票相关问题的智能回答",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "stock_code": {
                  "type": "string",
                  "example": "600519"
                },
                "question": {
                  "type": "string",
                  "example": "这只股票的主要支撑位是多少？"
                },
                "market_type": {
                  "type": "string",
                  "example": "A"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功获取智能回答"
          }
        }
      }
    },
    "/api/risk_analysis": {
      "post": {
        "summary": "风险分析",
        "description": "获取股票的风险分析结果",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "stock_code": {
                  "type": "string",
                  "example": "600519"
                },
                "market_type": {
                  "type": "string",
                  "example": "A"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功获取风险分析结果"
          }
        }
      }
    },
    "/api/portfolio_risk": {
      "post": {
        "summary": "投资组合风险分析",
        "description": "获取投资组合的整体风险分析结果",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "portfolio": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "stock_code": {
                        "type": "string"
                      },
                      "weight": {
                        "type": "number"
                      },
                      "market_type": {
                        "type": "string"
                      }
                    }
                  },
                  "example": [
                    {
                      "stock_code": "600519",
                      "weight": 30,
                      "market_type": "A"
                    },
                    {
                      "stock_code": "000858",
                      "weight": 20,
                      "market_type": "A"
                    }
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功获取投资组合风险分析结果"
          }
        }
      }
    },
    "/api/index_analysis": {
      "get": {
        "summary": "指数分析",
        "description": "获取指数的整体分析结果",
        "parameters": [
          {
            "name": "index_code",
            "in": "query",
            "required": true,
            "type": "string",
            "example": "000300"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "example": 30
          }
        ],
        "responses": {
          "200": {
            "description": "成功获取指数分析结果"
          }
        }
      }
    },
    "/api/industry_analysis": {
      "get": {
        "summary": "行业分析",
        "description": "获取行业的整体分析结果",
        "parameters": [
          {
            "name": "industry",
            "in": "query",
            "required": true,
            "type": "string",
            "example": "银行"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "example": 30
          }
        ],
        "responses": {
          "200": {
            "description": "成功获取行业分析结果"
          }
        }
      }
    },
    "/api/industry_compare": {
      "get": {
        "summary": "行业比较",
        "description": "比较不同行业的表现",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "成功获取行业比较结果"
          }
        }
      }
    }
  },
  "definitions": {
    "AnalysisRequest": {
      "type": "object",
      "properties": {
        "stock_code": {
          "type": "string",
          "example": "600519"
        },
        "market_type": {
          "type": "string",
          "example": "A"
        }
      },
      "required": ["stock_code"]
    },
    "TaskCreationResponse": {
        "type": "object",
        "properties": {
            "task_id": {
                "type": "string"
            }
        }
    },
    "TaskStatusResponse": {
        "type": "object",
        "properties": {
            "task_id": {
                "type": "string"
            },
            "status": {
                "type": "string"
            },
            "result": {
                "type": "object"
            }
        }
    },
    "Task": {
        "type": "object",
        "properties": {
            "task_id": {
                "type": "string"
            },
            "status": {
                "type": "string"
            },
            "name": {
                "type": "string"
            },
            "start_time": {
                "type": "string",
                "format": "date-time"
            }
        }
    },
    "Error": {
        "type": "object",
        "properties": {
            "error": {
                "type": "string"
            }
        }
    },
    "Stock": {
      "type": "object",
      "properties": {
        "stock_code": {
          "type": "string"
        },
        "stock_name": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "price_change": {
          "type": "number"
        }
      }
    },
    "AnalysisResult": {
      "type": "object",
      "properties": {
        "score": {
          "type": "number"
        },
        "recommendation": {
          "type": "string"
        }
      }
    }
  }
}